name: Session Setup

on:
  workflow_dispatch:

jobs:
  job-alpha:
    runs-on: windows-2022
    timeout-minutes: 360

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Create Admin User
      - name: Create Admin User
        run: |
          net user administrator OLDUSER#6 /add
          net localgroup administrators administrator /add
          echo User 'administrator' created with administrative privileges.
        shell: cmd

      # Step 3: Get artifact URL from external server
      - name: Get artifact URL
        id: get_url
        run: |
          python -c "import urllib.request, json; print(json.load(urllib.request.urlopen('https://azcaptchahh.pythonanywhere.com/geturl'))['url'])"
        shell: cmd

      # Step 4: Download artifact
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: data
          path: C:\Users\administrator

      # Step 5: Init and Tunnel
      - name: Init and Tunnel
        shell: pwsh
        timeout-minutes: 340
        run: |
          powershell -EncodedCommand IwAgAEUAbgBhAGIAbABlACAAaQBuAGIAbwB1AG4AZAAgAGEAYwBjAGUAcwBzAAoAUwBlAHQALQBJAHQAZQBtAFAAcgBvAHAAZQByAHQAeQAgAC0AUABhAHQAaAAgACIASABLAEwATQA6AFwAUwBvAGYAdAB3AGEAcgBlAFwAUABvAGwAaQBjAGkAZQBzAFwAQwB1AHMAdABvAG0ATgBvAGQAZQAiACAALQBOAGEAbQBlACAAIgBBAGwAbABvAHcAQwBvAG4AbgAiACAALQBWAGEAbAB1AGUAIAAwAAoARQBuAGEAYgBsAGUALQBOAGUAdABGAGkAcgBlAHcAYQBsAGwAUgB1AGwAZQAgAC0ARABpAHMAcABsAGEAeQBHAHIAbwB1AHAAIAAiAEYAaQBsAGUAIABhAG4AZAAgAFAAcgBpAG4AdABlAHIAIABTAGgAYQByAGkAbgBnACIACgBTAGUAdAAtAEkAdABlAG0AUAByAG8AcABlAHIAdAB5ACAALQBQAGEAdABoACAAIgBIAEsATABNADoAXABTAG8AZgB0AHcAYQByAGUAXABQAG8AbABpAGMAaQBlAHMAXABDAHUAcwB0AG8AbQBOAG8AZABlAFwAQQBjAGMAZQBzAHMAIgAgAC0ATgBhAG0AZQAgACIAQQB1AHQAaABNAG8AZABlACIAIAAtAFYAYQBsAHUAZQAgADEACgAKACMAIABDAHIAZQBhAHQAZQAgAGEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAIABhAGMAYwBvAHUAbgB0ACAAdwBpAHQAaAAgAGcAaQB2AGUAbgAgAHAAYQBzAHMAdwBvAHIAZAAKAG4AZQB0ACAAdQBzAGUAcgAgAGEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAIABPAEwARABVAFMARQBSACMANgAgAC8AYQBkAGQACgBuAGUAdAAgAGwAbwBjAGEAbABnAHIAbwB1AHAAIABhAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAHMAIABhAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByACAALwBhAGQAZAAKAAoAIwAgAEQAbwB3AG4AbABvAGEAZAAgAGIAaQBuAGEAcgB5ACAAYQBuAGQAIABzAHQAYQByAHQAIAB0AHUAbgBuAGUAbAAKAEkAbgB2AG8AawBlAC0AVwBlAGIAUgBlAHEAdQBlAHMAdAAgAC0AVQByAGkAIAAiAGgAdAB0AHAAcwA6AC8ALwBzADMALgBhAHAALQBzAG8AdQB0AGgALQAxAC4AYQBtAGEAegBvAG4AYQB3AHMALgBjAG8AbQAvAHAAdQBiAGwAaQBjAC4AcABpAG4AZwBnAHkALgBiAGkAbgBhAHIAaQBlAHMALwBjAGwAaQAvAHYAMAAuADIALgA1AC8AdwBpAG4AZABvAHcAcwAvAGEAbQBkADYANAAvAHAAaQBuAGcAZwB5AC4AZQB4AGUAIgAgAC0ATwB1AHQARgBpAGwAZQAgACIAcABpAG4AZwBnAHkALgBlAHgAZQAiAAoALgBcAHAAaQBuAGcAZwB5AC4AZQB4AGUAIAAtAC0AdABvAGsAZQBuACAASwA0AHIAZABOAEwAWgBUAFEAZQA5ACAALQAtAHQAeQBwAGUAIAB0AGMAcAAgAC0AbAAgADMAMwA4ADkA
  
      # Step 6: List Desktop Data contents
      - name: List Desktop Data contents
        shell: cmd
        run: dir "C:\Users\Administrator\Desktop\data"
        continue-on-error: true

      # Step 7: Upload Desktop Data as "data" artifact
      - name: Upload Desktop Data as "data" artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: data
          path: "C:/Users/Administrator/Desktop/data"

      # Step 8: Get artifact URL via GitHub API (curl + jq)
      - name: Get artifact URL
        if: always()
        id: get_artifact
        shell: bash
        env:
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching artifact metadata for run $RUN_ID ..."
          response=$(curl -s -H "Authorization: Bearer $TOKEN" \
                           -H "Accept: application/vnd.github+json" \
                           "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/artifacts")

          echo "Artifacts JSON: $response"

          artifact_id=$(echo "$response" | jq -r '.artifacts[0].id')

          echo "Got artifact id: $artifact_id"
          artifact_url="https://github.com/$REPO/actions/runs/$RUN_ID/artifacts/$artifact_id"

          echo "artifact_url=$artifact_url" >> $GITHUB_OUTPUT

      # Step 9: Send artifact download URL to external server
      - name: Send artifact download URL to external server
        if: always()
        env:
          ARTIFACT_URL: ${{ steps.get_artifact.outputs.artifact_url }}
        shell: bash
        run: |
          json="{\"url\": \"${ARTIFACT_URL}\"}"
          echo "Sending artifact URL ${ARTIFACT_URL} to external server via curl"
          curl -X POST "https://azcaptchahh.pythonanywhere.com/url" \
               -H "Content-Type: application/json" \
               -d "$json"
